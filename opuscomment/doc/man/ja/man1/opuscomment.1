.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "OPUSCOMMENT" "1" "2019-06-17" "1.5.10" "opuscomment 1.5マニュアル"

.SH 名前
opuscomment \- Ogg Opusファイルの出力ゲインとタグを編集する
.SH 書式

\fBopuscomment\fR [ \fB-l\fR ] [ \fB-C \fIcodec\fB\fR ] [ \fB-i \fIidx\fB\fR ] [ \fB-0DepQRUvV~\fR ] \fB\fIsrcfile\fB\fR


\fBopuscomment\fR { \fB-a\fR | \fB-w\fR } [ \fB-C \fIcodec\fB\fR ] [ \fB-i \fIidx\fB\fR ] [ \fB-g \fIgain\fB\fR | \fB-s \fIscale\fB\fR ] [ \fB-0e\fR ] [ \fB-c \fItagfile\fB\fR ] [ \fB-t \fINAME=VALUE\fB\fR\fI ...\fR ] [ \fB-d \fINAME[=VALUE]\fB\fR\fI ...\fR ] [ \fB-1DeQprRUv\fR ] \fB\fIsrcfile\fB\fR [ \fB\fIoutput\fB\fR ]


\fBopuscomment\fR [ \fB-h\fR ]

.SH "説明"
.PP
1つめの書式はタグ出力モードであり、OpusファイルのVorbis comment形式のタグを標準出力に出力する。
.PP
2つ目の書式はタグ上書き・追記モードであり、標準入力から読み取ったVorbis comment形式のタグをOpusファイルに書き込む。オプションの後のファイルが1つの場合、元のファイルは編集結果によって置き換えられる。2つの場合は編集結果が別ファイルに出力され、元のファイルはそのまま残る。タグファイル指定のオプションがあれば標準入力を使わずそのファイルからタグを読み込む。タグを直接指定するオプションがあればそれを入力として扱う。ゲイン編集のオプションがあればタグ編集と同時にそれも行われる。
.PP
いずれの書式でもゲイン出力のオプションの指定があればOpusファイルが持つ出力ゲインを標準エラー出力に出力する。
.SH "オプション"
.TP
\fB-l\fR
タグ出力モード
.TP
\fB-a\fR
タグ追記モード
.TP
\fB-w\fR
タグ書き込みモード
.TP
\fB-h\fR
使い方を表示して終了する
.TP
\fB-C \fIcodec\fB\fR
編集対象のコーデックを指定する。対応しているコーデックはOpus・Vorbis・FLAC・Speex・VP8・Theora・Daala・PCM・UVSである。
.TP
\fB-i \fIidx\fB\fR
多重化されたOggストリーム中の編集対象のストリームを、対象コーデック以外のものを除いた1起点の順番で指定する。動画ファイルが吹き替えや副音声などで複数の音声ストリームを持つという状況を想定している
.TP
\fB-R\fR
タグ入出力にUTF-8を使う。このオプションがない場合はロケールによる文字符号化との変換が行われる(\fBvorbiscomment\fR(1)互換)
.TP
\fB-~\fR
タグ出力時、改行のエスケープにタブ文字ではなく「~」を使用する。タグ入力時はこのオプションにかかわらずどちらも改行のエスケープとして受け付ける。
.TP
\fB-e\fR
バックスラッシュ、改行、復帰、ヌルにそれぞれ\\\\, \\n, \\r, \\0のエスケープを使用する(\fBvorbiscomment\fR(1)互換)
.TP
\fB-0\fR
タグ入出力に'\\0'区切りを使う
.TP
\fB-t \fINAME=VALUE\fB\fR
引数をタグとして追加する
.TP
\fB-c \fItagfile\fB\fR
出力モード時、タグを\fItagfile\fRに書き出す。書き込み・追記モード時、\fItagfile\fRからタグを読み出す
.TP
\fB-d \fINAME[=VALUE]\fB\fR
引数に一致するOpusファイル内のタグを削除する。\fI=VALUE\fRが省略された場合、\fINAME\fRが一致する全てのタグが削除される。\fB-U\fRを暗黙的に指定する
.TP
\fB-p\fR
出力モード時、\fIMETADATA_BLOCK_PICTURE\fRを出力しない。書込モード時、\fIMETADATA_BLOCK_PICTURE\fRは削除されず編集前のタグが維持される。

\fIMETADATA_BLOCK_PICTURE\fRを含む編集をエディタですると、人間にとって可読でない長大なデータで画面が埋まることになる。また編集過程でデータが変化してしまうと復旧が困難になる。そのような状況を回避するのに編集の前段・後段の両方で\fB-p\fRを使うと便利である。編集の後段だけで\fB-p\fRを使うと同じ画像が何度も書き込まれるので注意。
.TP
\fB-U\fR
Opusファイル内のタグの項目名に小文字が含まれていた場合、大文字に変換する。他のソフトウェアで編集されたファイルのために用意されているオプションであり、\fBopuscomment\fRは編集入力のタグの項目名を常に大文字に変換する
.TP
\fB-V\fR
出力モード時、Opusファイル内のタグに対して書式の正当性を検証する

vorbis commentは一定の書式が定められているが、Opusの内部構造としては任意のバイナリ列を保存することが出来る。このオプションが無い場合は、内部に保存されたレコードがUTF-8として妥当であればvorbis commentの形式を満たさなくてもそれを尊重してそのまま出力しようとする。しかしこの動作は\fBopuscomment\fRをはじめ他のフィルタとの連携に支障を来す可能性が高い。そのためそこでのエラーを防ぐ・あるいはエラー検出をさせるために信頼できないOpusファイルに対して編集を行う際に\fB-V\fRを使うと便利である。\fB-D\fRも参照のこと。
.TP
\fB-T\fR
タグ入力が改行で終わっていない場合エラーにする
.TP
\fB-D\fR
出力モード時、Opusファイル内のタグを全て読み終わるまで出力しない。また\fB-V\fRを暗黙的に指定する。書き込みモード時、空のタグ入力をエラーとする。また\fB-T\fRを暗黙的に指定する
.TP
\fB-g \fIgain\fB\fR
出力ゲインをdBで指定する
.TP
\fB-s \fIscale\fB\fR
出力ゲインをPCMサンプルの倍率で指定する。1で等倍。0.5で半分(コマンド内でdBに変換)
.TP
\fB-r\fR
出力ゲインの指定を内部の設定に対する相対値とする
.TP
\fB-1\fR
出力ゲインが内部形式にした時に0になる場合は±1/256dBを設定する
.TP
\fB-Q\fR
出力ゲイン値にQ7.8形式を使う
.TP
\fB-v\fR
出力ゲインの値を標準エラー出力に出力する
.TP
\fB-q\fR
何の効力も持たない。指定してもエラーにさせないために存在している。(\fBvorbiscomment\fR(1)互換)
.SH "終了ステータス"
.PP
Opusファイルの編集に成功した場合は0を返す。オプションや編集タグ入力の文法に誤りがあった場合は1を返す。Opusファイルのフォーマットに誤りがあった場合は2を返す。ファイル入出力などシステム起因のエラーが発生した場合は3を返す。
.SH "環境変数"
.TP
\fBLANG\fR
タグ内部形式のUTF-8とロケールの文字符号化方式との変換に影響を受ける
.TP
\fBLC_NUMERIC\fR
出力ゲイン編集に使う浮動小数点数の書式に影響を受ける
.TP
\fBLC_MESSAGES, NLSPATH\fR
メッセージカタログの処理に関わる
.SH "例"
.SS "基本"
.PP
\fBopuscomment\fRをOpusファイル1つだけを引数に指定して起動すると、そのファイル内のタグを標準出力に出力する。

.nf
opuscomment some.opus
.fi
.PP
Opusファイル内のタグを編集したい場合、その出力を好みのエディタで編集した後に\fBopuscomment\fRを書き込みモードで起動して標準入力に渡せば良い。この編集様式は\fBvorbiscomment\fR(1)に倣っている。

.nf
opuscomment some.opus >tags.txt
ed tags.txt
opuscomment -w some.opus <tags.txt
.fi
.PP
Ogg Opusには出力ゲインというヘッダ項目があり、それを変更することでエンコード後でも自在に音量を変更することが出来るという機能がコーデックの標準として付いている。\fBopuscomment\fRはその出力ゲインの編集に対応している。

.nf
# 音量が大きいOpusファイルを-5.0dB分音を小さくさせる
opuscomment -g -5.0 loud.opus
# 出力ゲインが変更されたことをopusinfo(1)のPlayback gainという項目で確認できる
opusinfo loud.opus
.fi
.SS "タグの上書き"
.PP
とあるタグ(例えば、TITLE)を直接上書き更新する方法は存在しない。しかし\fB-d\fRオプションとタグの追記を組み合わせることで、上書きの編集に代えることができる。

.nf
# -dを使ったタイトル変更法1
opuscomment -d TITLE -t TITLE="New Title" hoge.opus
# -dを使ったタイトル変更法2
echo TITLE=New Title |opuscomment -d TITLE hoge.opus
.fi
.SS "OGG VORBISからの移行"
.PP
Ogg VorbisとOgg Opusはタグの内部形式が同じで、また\fBopuscomment\fRはvorbiscommentと互換のあるインターフェイスを実装しているため、次のコマンドを使えば容易にタグを移植できる。

.nf
vorbiscomment -Re music-01.oga |opuscomment -wRe music-01.opus
.fi
.SS "OPUSファイルの同時編集"
.PP
シェルスクリプトの一般論として、1つのファイルをパイプを繋いで同時に編集しようとすると書き込みのタイミングにより内容が消えてしまうため、結果を一度別ファイルにリダイレクトしてリネームするという処理をするのが定石である。

.nf
sed 's/dog/cat/g' <animal.txt >animal.txt.1
mv -f animal.txt.1 animal.txt
.fi
.PP
しかし、\fBopuscomment\fRはタグの読み込みが終わるまでOpusファイルを書き込み用として開かないため、フィルタの前後で同じファイルを開いていても同時に編集されることはなく内容が失われる事は無い。

.nf
# 一時ファイルを作らなくてもsome.opusからDISCTOTALとDISCNUMBERタグを消す編集が意図通り適用される。
opuscomment -e some.opus |grep -vE '^DISC(TOTAL|NUMBER)=' |opuscomment -we some.opus
.fi
.SH "文法"
.PP
\fBopuscomment\fRで扱うタグ入出力の文法について、個々のレコードはvorbis commentの内部形式と同じで\fINAME=VALUE\fRのようにキー名と値が=で繋がれていて、レコード同士は改行で区切られている。例えば
.PP

.nf
TITLE=インターネット
ARTIST=荒川智則
.fi
.PP
但し、\fIVALUE\fRはそれ自体に改行を含む可能性があり、\fBopuscomment\fRは2つの方法で改行をエスケープする。
.TP
\fB1. opuscommentが定義する方法\fR
改行の次にタブかチルダが続いた場合、改行後の行は先頭のその文字を除き前の行の値の続きとして扱う
.TP
\fB2. -eを用いた時のvorbiscommentとの互換のある方法\fR
バックスラッシュを使ったエスケープシーケンスで改行を表す
.PP
\fBopuscomment\fRではこのいずれかの改行のエスケープが常に適用されており、適切なオプション指定と編集があれば改行が欠落することはない。具体的に、次の内容を持つレコード:
.PP
.TP
\fB項目名\fR
COMMENT
.TP
\fB内容\fR
.nf
荒川智則のライブ
2017-08-12録音
.fi
.PP
これは1つ目の\fBopuscomment\fRの方法だと
.PP

.nf
COMMENT=荒川智則のライブ<newline>
<tab>2017-08-12録音
.fi
.PP
2つ目のvorbiscomment互換形式だと
.PP

.nf
COMMENT=荒川智則のライブ\\n2017-08-12録音
.fi
.PP
となる。
.SH "注意"
.SS "OPUSCOMMENT方式のエスケープで編集する場合"
.PP
エンコードのやり直しのために同じタグを別のOpusファイルにコピーするという状況を考える。この時、\fBopuscomment\fR同士を直接パイプで繋いでタグの受け渡しを行うことは安全である。
.PP

.nf
# 安全な例
opuscomment old.opus |opuscomment -w re-encoded.opus
.fi
.PP
しかし、行の削除を含む編集をするフィルタを挟むことは安全ではなくなる可能性がある。なぜなら、もし削除したいレコードが複数行からなっていた場合、その項目名を含む行だけ削除をすると残りの行が1つ前のレコードの続きと見做されてしまうからである。
.PP

.nf
# 安全ではない例
opuscomment old.opus |sed '/^COMMENT=/d' |opuscomment -w re-encoded.opus
.fi
.PP
これを防ぐためには、レコードが複数行に跨ることを考慮してフィルタを設計する必要がある。
.PP

.nf
# 複数行のレコードを考慮した削除の例1
opuscomment old.opus |sed '/^COMMENT=/{:loop; N; s/.*\\n<tab>//; t loop; D;}' |
  opuscomment -w re-encoded.opus
.fi
.PP
より単純には、\fB-e\fRオプションのエスケープを使用することである。
.PP

.nf
# 複数行のレコードを考慮した削除の例2
opuscomment -e old.opus |sed '/^COMMENT=/d' |opuscomment -we re-encoded.opus
.fi
.SS "NULの扱い"
.PP
\fBopuscomment\fRは\fB-0\fRが指定されていない時に文字「NUL」が入力された場合は一切エラーとする。
.PP
もしOpus内のタグがNULを含んでいた場合、出力モードで文字が途切れるだろう。これはvorbis commentがあくまでUTF-8テキストを格納するものなのでバイナリファイルが入力された時にテキストファイルが壊れてしまうという動作を意図的に発現させているためである。しかし必要ならば\fB-R\fRか\fB-e\fRいずれかのオプションを指定することで回避できる。
.SS "出力ゲインとR128_TRACK_GAIN、R128_ALBUM_GAINの編集"
.PP
Opus仕様を定めた\fIRFC 7845\fRによれば、出力ゲインを編集した場合、併せて\fIR128_TRACK_GAIN\fR、\fIR128_ALBUM_GAIN\fRの更新ないし削除をしなければならない(MUST)、とある。しかし、\fBopuscomment\fRはこの仕様に基く処理を実装しない。\fBopuscomment\fRの利用者はこの仕様を念頭に置いてゲイン調整の編集をアプリケーションに組み込む必要がある。
.SH "関連項目"
\fBopusenc\fR(1), \fBopusinfo\fR(1), \fBopuschgain\fR(1), \fBvorbiscomment\fR(1), \fBmetaflac\fR(1), \fBop_set_gain_offset\fR(3)
